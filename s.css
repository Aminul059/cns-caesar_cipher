Create an empty stack and an empty output string.
Stack: []
Output: ""
Scan the infix expression from left to right:
a. Append 'a' to the output string.
Stack: []
Output: "a"
b. Push '' onto the stack.
Stack: [""]
Output: "a"
c. Append 'b' to the output string.
Stack: [""]
Output: "ab"
d. Push '+' onto the stack.
Stack: ["", "+"]
Output: "ab"
e. Append 'c' to the output string.
Stack: ["", "+"]
Output: "abc"
f. Push '' onto the stack.
Stack: ["", "", "+"]
Output: "abc"
g. Append 'd' to the output string.
Stack: ["", "", "+"]
Output: "abcd"
h. Push '+' onto the stack.
Stack: ["", "", "+", "+"]
Output: "abcd"
i. Append 'e' to the output string.
Stack: ["", "", "+"]
Output: "abcde"
Pop the remaining operators from the stack and append them to the output string.
Stack: ["", ""]
Output: "abcde*+"
Stack: [""]
Output: "abcde+"
Stack: []
Output: "abcde+*+"
Therefore, the postfix expression is ab*cd*+e+.